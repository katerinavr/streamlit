# Generated by CMake

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.5)
   message(FATAL_ERROR "CMake >= 2.6.0 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.6)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_targetsDefined)
set(_targetsNotDefined)
set(_expectedTargets)
foreach(_expectedTarget rdkit_base Inchi RDInchiLib avalon_clib AvalonLib freesasa_clib FreeSASALib maeparser coordgenlib RDGeneral RDBoost DataStructs RDGeometryLib Alignment EigenSolvers Optimizer ForceField DistGeometry Catalogs GraphMol Depictor SmilesParse FileParsers SubstructMatch ChemReactions ChemTransforms Subgraphs FilterCatalog FragCatalog Descriptors Fingerprints PartialCharges MolTransforms ForceFieldHelpers DistGeomHelpers MolAlign MolChemicalFeatures ShapeHelpers MolCatalog MolDraw2D FMCS MolHash MMPA StructChecker ReducedGraphs Trajectory SubstructLibrary RGroupDecomposition MolInterchange SLNParse MolStandardize SimDivPickers hc InfoTheory ChemicalFeatures)
  list(APPEND _expectedTargets ${_expectedTarget})
  if(NOT TARGET ${_expectedTarget})
    list(APPEND _targetsNotDefined ${_expectedTarget})
  endif()
  if(TARGET ${_expectedTarget})
    list(APPEND _targetsDefined ${_expectedTarget})
  endif()
endforeach()
if("${_targetsDefined}" STREQUAL "${_expectedTargets}")
  unset(_targetsDefined)
  unset(_targetsNotDefined)
  unset(_expectedTargets)
  set(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT "${_targetsDefined}" STREQUAL "")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_targetsDefined}\nTargets not yet defined: ${_targetsNotDefined}\n")
endif()
unset(_targetsDefined)
unset(_targetsNotDefined)
unset(_expectedTargets)


# Compute the installation prefix relative to this file.
get_filename_component(_IMPORT_PREFIX "${CMAKE_CURRENT_LIST_FILE}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
if(_IMPORT_PREFIX STREQUAL "/")
  set(_IMPORT_PREFIX "")
endif()

# Create imported target rdkit_base
add_library(rdkit_base INTERFACE IMPORTED)

set_target_properties(rdkit_base PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "RDK_64BIT_BUILD;RDK_HAS_EIGEN3;RDK_BUILD_DESCRIPTORS3D;RDK_THREADSAFE_SSS;RDK_TEST_MULTITHREADED;RDK_USE_STRICT_ROTOR_DEFINITION"
  INTERFACE_INCLUDE_DIRECTORIES "/opt/anaconda1anaconda2anaconda3/include/python3.6m;/opt/anaconda1anaconda2anaconda3/lib/python3.6/site-packages/numpy/core/include;${_IMPORT_PREFIX}/include/rdkit;/opt/anaconda1anaconda2anaconda3/include"
  INTERFACE_LINK_LIBRARIES "Eigen3::Eigen"
)

# Create imported target Inchi
add_library(Inchi SHARED IMPORTED)

set_target_properties(Inchi PROPERTIES
  INTERFACE_LINK_LIBRARIES "rdkit_base"
)

# Create imported target RDInchiLib
add_library(RDInchiLib SHARED IMPORTED)

set_target_properties(RDInchiLib PROPERTIES
  INTERFACE_LINK_LIBRARIES "rdkit_base;Inchi;GraphMol;RDGeneral;Depictor;SubstructMatch;SmilesParse;Threads::Threads"
)

# Create imported target avalon_clib
add_library(avalon_clib SHARED IMPORTED)

set_target_properties(avalon_clib PROPERTIES
  INTERFACE_LINK_LIBRARIES "rdkit_base"
)

# Create imported target AvalonLib
add_library(AvalonLib SHARED IMPORTED)

set_target_properties(AvalonLib PROPERTIES
  INTERFACE_LINK_LIBRARIES "rdkit_base;avalon_clib;FileParsers;SmilesParse;GraphMol;DataStructs;RDGeometryLib;RDGeneral"
)

# Create imported target freesasa_clib
add_library(freesasa_clib SHARED IMPORTED)

set_target_properties(freesasa_clib PROPERTIES
  INTERFACE_LINK_LIBRARIES "rdkit_base"
)

# Create imported target FreeSASALib
add_library(FreeSASALib SHARED IMPORTED)

set_target_properties(FreeSASALib PROPERTIES
  INTERFACE_LINK_LIBRARIES "rdkit_base;freesasa_clib;GraphMol;DataStructs;RDGeometryLib;RDGeneral"
)

# Create imported target maeparser
add_library(maeparser SHARED IMPORTED)

set_target_properties(maeparser PROPERTIES
  INTERFACE_LINK_LIBRARIES "rdkit_base"
)

# Create imported target coordgenlib
add_library(coordgenlib SHARED IMPORTED)

set_target_properties(coordgenlib PROPERTIES
  INTERFACE_LINK_LIBRARIES "rdkit_base;maeparser"
)

# Create imported target RDGeneral
add_library(RDGeneral SHARED IMPORTED)

set_target_properties(RDGeneral PROPERTIES
  INTERFACE_LINK_LIBRARIES "rdkit_base;Threads::Threads;Threads::Threads"
)

# Create imported target RDBoost
add_library(RDBoost SHARED IMPORTED)

set_target_properties(RDBoost PROPERTIES
  INTERFACE_LINK_LIBRARIES "rdkit_base;RDGeneral;/opt/anaconda1anaconda2anaconda3/lib/libboost_python3.so;/opt/anaconda1anaconda2anaconda3/lib/libboost_serialization.so"
)

# Create imported target DataStructs
add_library(DataStructs SHARED IMPORTED)

set_target_properties(DataStructs PROPERTIES
  INTERFACE_LINK_LIBRARIES "rdkit_base;RDGeneral"
)

# Create imported target RDGeometryLib
add_library(RDGeometryLib SHARED IMPORTED)

set_target_properties(RDGeometryLib PROPERTIES
  INTERFACE_LINK_LIBRARIES "rdkit_base;DataStructs;RDGeneral"
)

# Create imported target Alignment
add_library(Alignment SHARED IMPORTED)

set_target_properties(Alignment PROPERTIES
  INTERFACE_LINK_LIBRARIES "rdkit_base;RDGeometryLib"
)

# Create imported target EigenSolvers
add_library(EigenSolvers SHARED IMPORTED)

set_target_properties(EigenSolvers PROPERTIES
  INTERFACE_LINK_LIBRARIES "rdkit_base;RDGeneral"
)

# Create imported target Optimizer
add_library(Optimizer SHARED IMPORTED)

set_target_properties(Optimizer PROPERTIES
  INTERFACE_LINK_LIBRARIES "rdkit_base;RDGeometryLib;Trajectory"
)

# Create imported target ForceField
add_library(ForceField SHARED IMPORTED)

set_target_properties(ForceField PROPERTIES
  INTERFACE_LINK_LIBRARIES "rdkit_base;Optimizer;Trajectory"
)

# Create imported target DistGeometry
add_library(DistGeometry SHARED IMPORTED)

set_target_properties(DistGeometry PROPERTIES
  INTERFACE_LINK_LIBRARIES "rdkit_base;EigenSolvers;ForceField;ForceFieldHelpers"
)

# Create imported target Catalogs
add_library(Catalogs SHARED IMPORTED)

set_target_properties(Catalogs PROPERTIES
  INTERFACE_LINK_LIBRARIES "rdkit_base;RDGeneral"
)

# Create imported target GraphMol
add_library(GraphMol SHARED IMPORTED)

set_target_properties(GraphMol PROPERTIES
  INTERFACE_LINK_LIBRARIES "rdkit_base;RDGeometryLib;RDGeneral;Threads::Threads;Threads::Threads"
)

# Create imported target Depictor
add_library(Depictor SHARED IMPORTED)

set_target_properties(Depictor PROPERTIES
  INTERFACE_LINK_LIBRARIES "rdkit_base;MolAlign;coordgenlib;maeparser;SubstructMatch;GraphMol"
)

# Create imported target SmilesParse
add_library(SmilesParse SHARED IMPORTED)

set_target_properties(SmilesParse PROPERTIES
  INTERFACE_LINK_LIBRARIES "rdkit_base;GraphMol"
)

# Create imported target FileParsers
add_library(FileParsers SHARED IMPORTED)

set_target_properties(FileParsers PROPERTIES
  INTERFACE_LINK_LIBRARIES "rdkit_base;Depictor;SmilesParse;GraphMol;maeparser"
)

# Create imported target SubstructMatch
add_library(SubstructMatch SHARED IMPORTED)

set_target_properties(SubstructMatch PROPERTIES
  INTERFACE_LINK_LIBRARIES "rdkit_base;GraphMol;Threads::Threads"
)

# Create imported target ChemReactions
add_library(ChemReactions SHARED IMPORTED)

set_target_properties(ChemReactions PROPERTIES
  INTERFACE_LINK_LIBRARIES "rdkit_base;FilterCatalog;Descriptors;Fingerprints;DataStructs;Depictor;FileParsers;SubstructMatch;ChemTransforms;/opt/anaconda1anaconda2anaconda3/lib/libboost_serialization.so"
)

# Create imported target ChemTransforms
add_library(ChemTransforms SHARED IMPORTED)

set_target_properties(ChemTransforms PROPERTIES
  INTERFACE_LINK_LIBRARIES "rdkit_base;SubstructMatch;SmilesParse;Threads::Threads"
)

# Create imported target Subgraphs
add_library(Subgraphs SHARED IMPORTED)

set_target_properties(Subgraphs PROPERTIES
  INTERFACE_LINK_LIBRARIES "rdkit_base;GraphMol"
)

# Create imported target FilterCatalog
add_library(FilterCatalog SHARED IMPORTED)

set_target_properties(FilterCatalog PROPERTIES
  INTERFACE_LINK_LIBRARIES "rdkit_base;Subgraphs;SubstructMatch;SmilesParse;GraphMol;RDGeometryLib;Catalogs;RDGeneral;/opt/anaconda1anaconda2anaconda3/lib/libboost_serialization.so"
)

# Create imported target FragCatalog
add_library(FragCatalog SHARED IMPORTED)

set_target_properties(FragCatalog PROPERTIES
  INTERFACE_LINK_LIBRARIES "rdkit_base;Subgraphs;SubstructMatch;SmilesParse;Catalogs;GraphMol;RDGeometryLib;RDGeneral"
)

# Create imported target Descriptors
add_library(Descriptors SHARED IMPORTED)

set_target_properties(Descriptors PROPERTIES
  INTERFACE_LINK_LIBRARIES "rdkit_base;PartialCharges;SmilesParse;FileParsers;Subgraphs;SubstructMatch;MolTransforms;GraphMol;EigenSolvers;Threads::Threads"
)

# Create imported target Fingerprints
add_library(Fingerprints SHARED IMPORTED)

set_target_properties(Fingerprints PROPERTIES
  INTERFACE_LINK_LIBRARIES "rdkit_base;Subgraphs;SubstructMatch;SmilesParse;GraphMol;Threads::Threads"
)

# Create imported target PartialCharges
add_library(PartialCharges SHARED IMPORTED)

set_target_properties(PartialCharges PROPERTIES
  INTERFACE_LINK_LIBRARIES "rdkit_base;GraphMol"
)

# Create imported target MolTransforms
add_library(MolTransforms SHARED IMPORTED)

set_target_properties(MolTransforms PROPERTIES
  INTERFACE_LINK_LIBRARIES "rdkit_base;GraphMol;EigenSolvers"
)

# Create imported target ForceFieldHelpers
add_library(ForceFieldHelpers SHARED IMPORTED)

set_target_properties(ForceFieldHelpers PROPERTIES
  INTERFACE_LINK_LIBRARIES "rdkit_base;SmilesParse;SubstructMatch;ForceField"
)

# Create imported target DistGeomHelpers
add_library(DistGeomHelpers SHARED IMPORTED)

set_target_properties(DistGeomHelpers PROPERTIES
  INTERFACE_LINK_LIBRARIES "rdkit_base;ForceFieldHelpers;DistGeometry;Alignment;Threads::Threads"
)

# Create imported target MolAlign
add_library(MolAlign SHARED IMPORTED)

set_target_properties(MolAlign PROPERTIES
  INTERFACE_LINK_LIBRARIES "rdkit_base;MolTransforms;SubstructMatch;Alignment;RDGeometryLib;RDGeneral;ForceFieldHelpers"
)

# Create imported target MolChemicalFeatures
add_library(MolChemicalFeatures SHARED IMPORTED)

set_target_properties(MolChemicalFeatures PROPERTIES
  INTERFACE_LINK_LIBRARIES "rdkit_base;SubstructMatch;SmilesParse"
)

# Create imported target ShapeHelpers
add_library(ShapeHelpers SHARED IMPORTED)

set_target_properties(ShapeHelpers PROPERTIES
  INTERFACE_LINK_LIBRARIES "rdkit_base;MolTransforms"
)

# Create imported target MolCatalog
add_library(MolCatalog SHARED IMPORTED)

set_target_properties(MolCatalog PROPERTIES
  INTERFACE_LINK_LIBRARIES "rdkit_base;GraphMol;Catalogs"
)

# Create imported target MolDraw2D
add_library(MolDraw2D SHARED IMPORTED)

set_target_properties(MolDraw2D PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "RDK_BUILD_CAIRO_SUPPORT"
  INTERFACE_LINK_LIBRARIES "rdkit_base;ChemReactions;FileParsers;SmilesParse;Depictor;MolTransforms;RDGeometryLib;RDGeneral;SubstructMatch;Subgraphs;GraphMol;EigenSolvers;RDGeometryLib;Threads::Threads;Cairo::Cairo"
)

# Create imported target FMCS
add_library(FMCS SHARED IMPORTED)

set_target_properties(FMCS PROPERTIES
  INTERFACE_LINK_LIBRARIES "rdkit_base;Depictor;FileParsers;ChemTransforms;SubstructMatch"
)

# Create imported target MolHash
add_library(MolHash SHARED IMPORTED)

set_target_properties(MolHash PROPERTIES
  INTERFACE_LINK_LIBRARIES "rdkit_base;Depictor;Descriptors;GraphMol;RDGeneral"
)

# Create imported target MMPA
add_library(MMPA SHARED IMPORTED)

set_target_properties(MMPA PROPERTIES
  INTERFACE_LINK_LIBRARIES "rdkit_base;SubstructMatch;Depictor;FileParsers;ChemTransforms;GraphMol;Threads::Threads"
)

# Create imported target StructChecker
add_library(StructChecker SHARED IMPORTED)

set_target_properties(StructChecker PROPERTIES
  INTERFACE_LINK_LIBRARIES "rdkit_base;Depictor;SubstructMatch;FileParsers;ChemTransforms;Descriptors;GraphMol;RDGeometryLib;RDGeneral;Threads::Threads"
)

# Create imported target ReducedGraphs
add_library(ReducedGraphs SHARED IMPORTED)

set_target_properties(ReducedGraphs PROPERTIES
  INTERFACE_LINK_LIBRARIES "rdkit_base;SubstructMatch;SmilesParse;GraphMol;Threads::Threads"
)

# Create imported target Trajectory
add_library(Trajectory SHARED IMPORTED)

set_target_properties(Trajectory PROPERTIES
  INTERFACE_LINK_LIBRARIES "rdkit_base;RDGeneral;RDGeometryLib;GraphMol"
)

# Create imported target SubstructLibrary
add_library(SubstructLibrary SHARED IMPORTED)

set_target_properties(SubstructLibrary PROPERTIES
  INTERFACE_LINK_LIBRARIES "rdkit_base;Fingerprints;SubstructMatch;SmilesParse;GraphMol;RDGeometryLib;Catalogs;RDGeneral;DataStructs"
)

# Create imported target RGroupDecomposition
add_library(RGroupDecomposition SHARED IMPORTED)

set_target_properties(RGroupDecomposition PROPERTIES
  INTERFACE_LINK_LIBRARIES "rdkit_base;FMCS;ChemTransforms;SubstructMatch;SmilesParse;Threads::Threads"
)

# Create imported target MolInterchange
add_library(MolInterchange SHARED IMPORTED)

set_target_properties(MolInterchange PROPERTIES
  INTERFACE_LINK_LIBRARIES "rdkit_base;GraphMol"
)

# Create imported target SLNParse
add_library(SLNParse SHARED IMPORTED)

set_target_properties(SLNParse PROPERTIES
  INTERFACE_LINK_LIBRARIES "rdkit_base;GraphMol"
)

# Create imported target MolStandardize
add_library(MolStandardize SHARED IMPORTED)

set_target_properties(MolStandardize PROPERTIES
  INTERFACE_LINK_LIBRARIES "rdkit_base;ChemReactions;ChemTransforms;GraphMol;RDGeneral"
)

# Create imported target SimDivPickers
add_library(SimDivPickers SHARED IMPORTED)

set_target_properties(SimDivPickers PROPERTIES
  INTERFACE_LINK_LIBRARIES "rdkit_base;hc;RDGeneral"
)

# Create imported target hc
add_library(hc SHARED IMPORTED)

set_target_properties(hc PROPERTIES
  INTERFACE_LINK_LIBRARIES "rdkit_base"
)

# Create imported target InfoTheory
add_library(InfoTheory SHARED IMPORTED)

set_target_properties(InfoTheory PROPERTIES
  INTERFACE_LINK_LIBRARIES "rdkit_base;DataStructs;RDGeneral"
)

# Create imported target ChemicalFeatures
add_library(ChemicalFeatures SHARED IMPORTED)

set_target_properties(ChemicalFeatures PROPERTIES
  INTERFACE_LINK_LIBRARIES "rdkit_base;RDGeneral;RDGeometryLib"
)

if(CMAKE_VERSION VERSION_LESS 3.0.0)
  message(FATAL_ERROR "This file relies on consumers using CMake 3.0.0 or greater.")
endif()

# Load information for each installed configuration.
get_filename_component(_DIR "${CMAKE_CURRENT_LIST_FILE}" PATH)
file(GLOB CONFIG_FILES "${_DIR}/rdkit-targets-*.cmake")
foreach(f ${CONFIG_FILES})
  include(${f})
endforeach()

# Cleanup temporary variables.
set(_IMPORT_PREFIX)

# Loop over all imported files and verify that they actually exist
foreach(target ${_IMPORT_CHECK_TARGETS} )
  foreach(file ${_IMPORT_CHECK_FILES_FOR_${target}} )
    if(NOT EXISTS "${file}" )
      message(FATAL_ERROR "The imported target \"${target}\" references the file
   \"${file}\"
but this file does not exist.  Possible reasons include:
* The file was deleted, renamed, or moved to another location.
* An install or uninstall procedure did not complete successfully.
* The installation package was faulty and contained
   \"${CMAKE_CURRENT_LIST_FILE}\"
but not all the files it references.
")
    endif()
  endforeach()
  unset(_IMPORT_CHECK_FILES_FOR_${target})
endforeach()
unset(_IMPORT_CHECK_TARGETS)

# This file does not depend on other imported targets which have
# been exported from the same project but in a separate export set.

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
